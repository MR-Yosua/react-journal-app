{"version":3,"sources":["firebase/firebase-config.js","helpers/fileUpload.js","helpers/loadNotes.js","types/types.js","actions/notes.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","uid","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","types","activeNote","note","type","payload","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNotes","getState","url","noteToFirestore","doc","update","then","refreshNote","catch","e","console","log","Swal","fire","position","width","icon","title","showConfirmButton","timer","deleteNote","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","NotesAppBar","useDispatch","active","useSelector","state","actualDate","moment","format","className","style","display","onChange","files","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","onClick","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","delete","startDeleteNote","NothingSelected","setError","err","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","user","login","displayName","message","logout","JournalEntry","date","noteDate","backgroundSize","backgroundImage","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","add","JournalScreen","LoginScreen","loading","ui","handeInputChange","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalAPP","ReactDOM","render","getElementById"],"mappings":"qRAcEA,IAASC,cATY,CACnBC,OAAQ,0CACRC,WAAY,0CACZC,UAAW,0BACXC,cAAe,sCACfC,kBAAmB,eACnBC,MAAO,8CAKT,IAAMC,EAAKR,IAASS,YACdC,EAAqB,IAAIV,IAASW,KAAKC,mBCjBlCC,EAAU,uCAAG,WAAMC,GAAN,mBAAAC,EAAA,4DAEL,oDAEXC,EAAW,IAAIC,UACZC,OAAO,gBAAgB,iBAChCF,EAASE,OAAO,OAAOJ,GAND,kBASCK,MAPN,mDAOqB,CAC9BC,OAAO,OACPC,KAAML,IAXQ,YASZM,EATY,QAcVC,GAdU,kCAeUD,EAAKE,OAff,eAeRC,EAfQ,yBAgBPA,EAAUC,YAhBH,yBAkBFJ,EAAKE,OAlBH,oJAAH,sDCIVG,EAAS,uCAAI,WAAOC,GAAP,iBAAAb,EAAA,sEAEEP,EAAGqB,WAAH,UAAiBD,EAAjB,mBAAsCE,MAFxC,cAEhBC,EAFgB,OAGhBC,EAAQ,GAEdD,EAAUE,SAAQ,SAAAC,GAEdF,EAAMG,KAAN,aACIC,GAAIF,EAASE,IACVF,EAASG,YATE,kBAafL,GAbe,2CAAJ,sDCJTM,EAEF,eAFEA,EAGD,gBAHCA,EAOG,iBAPHA,EAQM,oBARNA,EAYO,qBAZPA,EAaQ,sBAbRA,EAeI,mBAfJA,EAgBI,0BAhBJA,EAiBE,qBAjBFA,EAkBK,sBAlBLA,EAoBI,sBApBJA,EAqBY,0BCOZC,EAAa,SAACH,EAAII,GAAL,MAAe,CACrCC,KAAMH,EACNI,QAAQ,aACJN,MACGI,KAIEG,EAAa,SAACP,EAAGI,GAAJ,MAAa,CAClCC,KAAKH,EACLI,QAAQ,aACJN,MAAOI,KAIHI,EAAoB,SAAChB,GAC9B,8CAAO,WAAOiB,GAAP,eAAA9B,EAAA,sEACiBY,EAAUC,GAD3B,OACGI,EADH,OAEHa,EAAUC,EAASd,IAFhB,2CAAP,uDAMSc,EAAW,SAACd,GAAD,MAAU,CAC9BS,KAAMH,EACNI,QAASV,IAIAe,EAAiB,SAACP,GAC3B,8CAAO,WAAOK,EAASG,GAAhB,iBAAAjC,EAAA,6DAEIa,EAAOoB,IAAWrC,KAAlBiB,IAEHY,EAAKS,YACET,EAAKS,WAGVC,EARH,eAQyBV,IACLJ,GATpB,SAWG5B,EAAG2C,IAAH,UAAUvB,EAAV,0BAA+BY,EAAKJ,KAAMgB,OAAOF,GAAiBG,MAAK,WAEzER,EAASS,EAAYd,EAAKJ,GAAGc,OAE9BK,OAAM,SAAAC,GACLC,QAAQC,IAAIF,MAhBb,OAmBHG,IAAKC,KAAK,CACNC,SAAU,UACVC,MAAO,QACPC,KAAM,UACNC,MAAO,sBACPC,mBAAmB,EACnBC,MAAO,OAzBR,2CAAP,yDA8BSZ,EAAc,SAAElB,EAAII,GAAN,MAAiB,CACxCC,KAAMH,EACNI,QAAS,CACLN,KACAI,KAAK,aACDJ,MACGI,MAqCF2B,EAAa,SAAC/B,GAAD,MAAS,CAC/BK,KAAKH,EACLI,QAASN,I,QCjIAgC,EAAU,WAA0B,IAAxBC,EAAuB,uDAAR,GAAQ,EAEhBC,mBAASD,GAFO,mBAErCE,EAFqC,KAE7BC,EAF6B,KAItCC,EAAQ,WAAmC,IAAjCC,EAAgC,uDAAjBL,EAC3BG,EAAWE,IAITC,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEzBJ,EAAU,2BACHD,GADE,kBAEHK,EAAOC,KAAQD,EAAOE,UAKhC,MAAO,CAAEP,EAAQI,EAAmBF,I,iBCf3BM,G,MAAc,WAEvB,IAAMlC,EAAWmC,cACVC,EAAUC,aAAY,SAAAC,GAAK,OAAIA,EAAMnD,SAArCiD,OACDG,EAAaC,MAASC,OAAO,eAoBnC,OACI,sBAAKC,UAAU,iBAAf,UACI,+BAAOH,IAEP,uBACIhD,GAAK,eACLK,KAAK,OACL+C,MAAO,CAACC,QAAQ,QAChBC,SAfa,SAAClC,GACtB,IAAM1C,EAAQ0C,EAAEoB,OAAOe,MAAM,GAC1B7E,GACC+B,EFyEkB,SAAC/B,GAC3B,8CAAO,WAAM+B,EAASG,GAAf,iBAAAjC,EAAA,6DACawB,EAAcS,IAAWhB,MAAlCiD,OAEPtB,IAAKC,KAAK,CACNI,MAAQ,eACR4B,KAAO,iBACPC,mBAAmB,EACnB5B,mBAAmB,EACnB6B,aAAc,WACVnC,IAAKoC,iBATV,SAamBlF,EAAWC,GAb9B,OAaGkF,EAbH,OAcHzD,EAAWU,IAAM+C,EAEjBnD,EAASE,EAAeR,IACxBoB,IAAKsC,QAjBF,2CAAP,wDE1EiBC,CAAepF,OAexB,gCACI,wBACIyE,UAAU,MACVY,QA1BW,WACvBC,SAASC,cAAc,iBAAiBC,SAuBhC,qBAOA,wBACAf,UAAU,MACVY,QAtCO,WAEftD,EAASE,EAAekC,KAkChB,0BC3CHsB,EAAa,WAAO,IAEf/D,EAAQ0C,aAAY,SAAAC,GAAK,OAAIA,EAAMnD,SAA1CiD,OAFqB,EAGiBb,EAAQ5B,GAHzB,mBAGrBgE,EAHqB,KAGV7B,EAHU,KAGQF,EAHR,KAIrBpD,EAAiBmF,EAAjBnF,KAAK2C,EAAYwC,EAAZxC,MAAM5B,EAAMoE,EAANpE,GAEZS,EAAWmC,cAEXyB,EAAWC,iBAAOlE,EAAKJ,IAE7BuE,qBAAU,WAEHnE,EAAKJ,KAAOqE,EAASG,UACpBnC,EAAMjC,GACNiE,EAASG,QAAUpE,EAAKJ,MAE7B,CAACI,EAAKiC,IAGTkC,qBAAU,WAEN9D,EAASN,EAAWiE,EAAWpE,GAAZ,eAAmBoE,OAEvC,CAACA,EAAW3D,IA4Bf,OACI,sBAAK0C,UAAU,sBAAf,UAEI,cAAC,EAAD,IAEA,sBAAKA,UAAW,iBAAhB,UAEI,uBACA9C,KAAK,OACLoE,YAAY,YACZtB,UAAU,qBACVuB,aAAa,MACbjC,KAAM,QACNC,MAAQd,EACR0B,SAAUf,IAGV,0BACIkC,YAAY,uBACZtB,UAAU,kBACVuB,aAAa,MACbjC,KAAM,OACNC,MAAOzD,EACPqE,SAAUf,IAITnC,EAAKS,KACL,qBAAKsC,UAAY,eAAjB,SAEG,qBACIwB,IAAMvE,EAAKS,IACX+D,IAAI,aAQpB,wBACAzB,UAAU,aACVY,QAnEa,WAEjBxC,IAAKC,KAAK,CACNI,MAAO,gBACP4B,KAAM,oCACN7B,KAAM,UACNkD,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBAClB/D,MAAK,SAACgE,GACHA,EAAOC,cACT3D,IAAKC,KACH,WACA,8BACA,WAGFf,EHuEiB,SAACT,GAC5B,8CAAO,WAAOS,EAASG,GAAhB,eAAAjC,EAAA,6DAEIa,EAAOoB,IAAWrC,KAAlBiB,IAFJ,SAGGpB,EAAG2C,IAAH,UAAUvB,EAAV,0BAA+BQ,IAAMmF,SAHxC,OAIH1E,EAASsB,EAAW/B,IAJjB,2CAAP,wDGxEmBoF,CAAgBpF,SA+C3B,wBC/FCqF,EAAkB,WAC3B,OACI,sBAAKlC,UAAW,wBAAhB,UACI,oDAEI,uBAFJ,sBAMA,mBAAGA,UAAU,+BCTZmC,EAAW,SAACC,GAAD,MAAS,CAC7BlF,KAAKH,EACLI,QAASiF,IAWAC,EAAgB,iBAAK,CAC9BnF,KAAKH,ICTIuF,EAA0B,SAACC,EAAMC,GAC1C,OAAO,SAAClF,GAEJA,EDCyB,CAC7BJ,KAAKH,ICADtC,IAASW,OAAOqH,2BAA2BF,EAAMC,GAChD1E,MAAK,YAAW,IAAT4E,EAAQ,EAARA,KACJpF,EAASqF,EAAMD,EAAKrG,IAAIqG,EAAKE,cAC7BtF,EAAS+E,QACVrE,OAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZX,EAAS+E,KACTjE,IAAKC,KAAK,QAAQJ,EAAE4E,QAAQ,cA0C3BF,EAAQ,SAACtG,EAAKuG,GAAN,MAAuB,CAExC1F,KAAMH,EACNI,QAAQ,CACJd,MACAuG,iBAYKE,EAAS,iBAAK,CACvB5F,KAAKH,ICxEIgG,EAAe,SAAC,GAA8B,IAA7BlG,EAA4B,EAA5BA,GAAGmG,EAAyB,EAAzBA,KAAKvE,EAAoB,EAApBA,MAAM3C,EAAc,EAAdA,KAAK4B,EAAS,EAATA,IAGvCJ,EAAWmC,cAEXwD,EAAWnD,IAAOkD,GAQxB,OACI,sBACAhD,UAAU,mEACVY,QATqB,WACrBtD,EAASN,EAAWH,EAAG,CACnBmG,OAAKvE,QAAM3C,OAAK4B,UAKpB,UAMQA,GACA,qBACAsC,UAAU,yBACVC,MAAO,CACHiD,eAAgB,QAChBC,gBAAgB,OAAD,OAASzF,EAAT,QAMvB,sBAAKsC,UAAW,sBAAhB,UAEI,mBAAGA,UAAW,uBAAd,SACMvB,IAGN,mBAAGuB,UAAW,yBAAd,SACMlE,OAKV,sBAAKkE,UAAW,0BAAhB,UACJ,+BAAOiD,EAASlD,OAAO,UACf,6BAAKkD,EAASlD,OAAO,cChDxBqD,GAAiB,WAAO,IAG1B3G,EAASkD,aAAY,SAAAC,GAAK,OAAIA,EAAMnD,SAApCA,MACP,OACI,qBAAKuD,UAAU,oBAAf,SAGQvD,EAAM4G,KAAI,SAAApG,GAAI,OACV,cAAC,EAAD,eAEIA,GADCA,EAAKJ,UCRjByG,GAAU,WAEnB,IAAMhG,EAAWmC,cACVH,EAAQK,aAAY,SAAAC,GAAK,OAAIA,EAAMxE,QAAnCkE,KAYP,OACI,wBAAOU,UAAU,mBAAjB,UAEI,sBAAKA,UAAU,0BAAf,UACI,qBAAIA,UAAU,OAAd,UACI,mBAAGA,UAAU,gBACb,qCAAQV,EAAR,UAGJ,wBACIU,UAAU,MACVY,QApBK,WACjBtD,EH0DJ,uCAAO,WAAMA,GAAN,SAAA9B,EAAA,sEACGf,IAASW,OAAOmI,UADnB,OAEHjG,EAASwF,KACTxF,EN6DyB,CAC7BJ,KAAKH,IMjEE,2CAAP,wDGzCY,uBAQJ,sBACAiD,UAAU,qBACVY,QAvBa,WACjBtD,ETRJ,uCAAO,WAAOA,EAAUG,GAAjB,mBAAAjC,EAAA,6DAEIa,EAAOoB,IAAWrC,KAAlBiB,IAEDmH,EAAS,CACX/E,MAAO,GACP3C,KAAM,GACNkH,MAAM,IAAIS,MAAOC,WAPlB,SASezI,EAAGqB,WAAH,UAAiBD,EAAjB,mBAAsCsH,IAAIH,GATzD,OASG5F,EATH,OAWHN,EAASN,EAAYY,EAAIf,GAAI2G,IAE7BlG,EAAUF,EAAWQ,EAAIf,GAAG2G,IAbzB,2CAAP,0DS4BQ,UAII,mBAAGxD,UAAU,+BACb,mBAAGA,UAAU,OAAb,0BAIJ,cAAC,GAAD,QCzCC4D,GAAgB,WAAO,IAEzBlE,EAAUC,aAAY,SAAAC,GAAK,OAAIA,EAAMnD,SAArCiD,OAEP,OACI,sBAAKM,UAAU,0EAAf,UAEI,cAAC,GAAD,IAEA,+BAGKN,EACM,cAAC,EAAD,IACA,cAAC,EAAD,UCbVmE,GAAc,WAEvB,IAAMvG,EAAWmC,cACVqE,EAAWnE,aAAY,SAAAC,GAAK,OAAIA,EAAMmE,MAAtCD,QAHsB,EAKSjF,EAAS,CAG3C0D,MAAM,GACNC,SAAU,KATe,mBAKtBvB,EALsB,KAKX+C,EALW,KAYtBzB,EAAmBtB,EAAnBsB,MAAOC,EAAYvB,EAAZuB,SAad,OACI,eAAC,WAAD,WACI,oBAAIxC,UAAU,cAAd,qBAEA,uBACAiE,SAhBY,SAAChG,GACjBA,EAAEiG,iBACF5G,EAASgF,EAAwBC,EAAMC,KAenCxC,UAAY,oDAFZ,UAII,uBACI9C,KAAK,OACLoE,YAAY,QACZhC,KAAK,QACLU,UAAU,cACVuB,aAAc,MACdhC,MAASgD,EACTpC,SAAY6D,IAGhB,uBACI9G,KAAK,WACLoE,YAAY,WACZhC,KAAK,WACLU,UAAU,cACVT,MAASiD,EACTrC,SAAY6D,IAGhB,wBACA9G,KAAK,SACL8C,UAAU,kCACVmE,SAAUL,EAHV,mBAQA,sBAAK9D,UAAU,uBAAf,UACI,2DAEA,sBACIA,UAAU,aACVY,QA7CK,WACrBtD,GLoBG,SAACA,GAEJ7C,IAASW,OAAOgJ,gBAAgBjJ,GAC/B2C,MAAK,YAAW,IAAT4E,EAAQ,EAARA,KAEJpF,EACIqF,EAAMD,EAAKrG,IAAIqG,EAAKE,qBKgBhB,UAII,qBAAK5C,UAAU,sBAAf,SACI,qBAAKA,UAAU,cAAcwB,IAAI,8EAA8EC,IAAI,oBAEvH,mBAAGzB,UAAU,WAAb,SACI,yDAIR,cAAC,IAAD,CAAMqE,GAAI,iBACNrE,UAAY,YADhB,0C,oBCzEPsE,GAAiB,WAE1B,IAAMhH,EAAWmC,cACV8E,EAAY5E,aAAY,SAAAC,GAAK,OAAIA,EAAMmE,MAAvCQ,SAHyB,EAOM1F,EAAS,CAK3CS,KAAK,GACLiD,MAAO,GACPC,SAAU,GACVgC,UAAW,KAfiB,mBAOzBvD,EAPyB,KAOd+C,EAPc,KAkBzB1E,EAAiC2B,EAAjC3B,KAAKiD,EAA4BtB,EAA5BsB,MAAMC,EAAsBvB,EAAtBuB,SAASgC,EAAavD,EAAbuD,UAUrBC,EAAc,WAEhB,OAA0B,IAAvBnF,EAAKoF,OAAOC,QACXrH,EAAS6E,EAAS,sBACX,GACAyC,KAAUC,QAAStC,GAGpBC,IAAagC,GACnBlH,EAAS6E,EAAS,6BACX,GAEPK,EAASmC,QAAU,GACnBrH,EAAS6E,EAAS,8CACX,IAGX7E,EP/CyB,CAC7BJ,KAAKH,KOgDM,IAbHO,EAAS6E,EAAS,wBACX,IAmBf,OACI,eAAC,WAAD,WACI,oBAAInC,UAAU,uBAAd,wBAEA,uBACAiE,SAvCe,SAAChG,GACpBA,EAAEiG,iBAEEO,KACAnH,ENPsC,SAACiF,EAAMC,EAASlD,GAC9D,OAAO,SAAChC,GACJ7C,IAASW,OAAO0J,+BAA+BvC,EAAMC,GACpD1E,KADD,uCACO,6BAAAtC,EAAA,6DAAQkH,EAAR,EAAQA,KAAR,SAEGA,EAAKqC,cAAc,CAACnC,YAAYtD,IAFnC,OAGHlB,IAAKC,KAAK,CACNC,SAAU,SACVE,KAAM,UACNC,MAAO,+BACPC,mBAAmB,EACnBC,MAAO,OARR,2CADP,uDAWGX,OAAM,SAAAC,GACLG,IAAKC,KAAK,QAAQJ,EAAE4E,QAAQ,aMPnBmC,CAAmCzC,EAAMC,EAASlD,KAoC3DU,UAAY,oDAFZ,UAOIuE,GACC,qBAAKvE,UAAY,mCAAjB,SACIuE,IAMT,uBACQrH,KAAK,OACLoE,YAAY,OACZhC,KAAK,OACLU,UAAU,cACVuB,aAAc,MACdhC,MAAOD,EACPa,SAAU6D,IAGd,uBACI9G,KAAK,OACLoE,YAAY,QACZhC,KAAK,QACLU,UAAU,cACVuB,aAAc,MACdhC,MAAOgD,EACPpC,SAAU6D,IAGd,uBACI9G,KAAK,WACLoE,YAAY,WACZhC,KAAK,WACLU,UAAU,cACVT,MAAOiD,EACPrC,SAAU6D,IAGd,uBACI9G,KAAK,WACLoE,YAAY,mBACZhC,KAAK,YACLU,UAAU,cACVT,MAAOiF,EACPrE,SAAU6D,IAGd,wBACA9G,KAAK,SACL8C,UAAU,uCAFV,sBAQA,cAAC,IAAD,CAAMqE,GAAI,cACNrE,UAAY,YADhB,uCC1HHiF,GAAa,WACtB,OAEI,qBAAKjF,UAAU,aAAf,SAEI,qBAAKA,UAAW,sBAAhB,SAEI,eAAC,IAAD,WAEI,cAAC,IAAD,CACIkF,OAAK,EACLC,KAAK,cACLC,UAAWvB,KAKf,cAAC,IAAD,CACIqB,OAAK,EACLC,KAAK,iBACLC,UAAWd,KAIf,cAAC,IAAD,CAAUD,GAAI,2B,SCxBrBgB,GAAe,SAAC,GAItB,IAHHC,EAGE,EAHFA,gBACWC,EAET,EAFFH,UACGI,EACD,gDAEF,OACI,cAAC,IAAD,2BAAYA,GAAZ,IACIJ,UAAY,SAACK,GAAD,OACNH,EACM,cAACC,EAAD,eAAgBE,IAChB,cAAC,IAAD,CAAUpB,GAAG,qBCXxBqB,GAAc,SAAC,GAIrB,IAHHJ,EAGE,EAHFA,gBACWC,EAET,EAFFH,UACGI,EACD,gDAEF,OACI,cAAC,IAAD,2BAAYA,GAAZ,IACIJ,UAAY,SAACK,GAAD,OACNH,EACM,cAAC,IAAD,CAAUjB,GAAG,MACb,cAACkB,EAAD,eAAgBE,SCD3BE,GAAY,WAErB,IAAMrI,EAAWmC,cAFU,EAIKV,oBAAS,GAJd,mBAIpB6G,EAJoB,KAIVC,EAJU,OAKS9G,oBAAS,GALlB,mBAKpB+G,EALoB,KAKRC,EALQ,KAwB3B,OAjBA3E,qBAAU,WACN3G,IAASW,OAAO4K,mBAAhB,uCAAmC,WAAOtD,GAAP,SAAAlH,EAAA,uDAE/B,OAAGkH,QAAH,IAAGA,OAAH,EAAGA,EAAMrG,MACLiB,EAASqF,EAAMD,EAAKrG,IAAIqG,EAAKE,cAC7BmD,GAAc,GACdzI,EAASD,EAAkBqF,EAAKrG,OAGhC0J,GAAc,GAGlBF,GAAY,GAXmB,2CAAnC,yDAcD,CAACvI,EAASuI,EAAYE,IAEtBH,EAEK,qBAAK5F,UAAU,sBAOnB,cAAC,IAAD,UACI,8BACI,eAAC,IAAD,WACI,cAAC,GAAD,CACIsF,gBAAiBQ,EACjBX,KAAK,QACLC,UAAaH,KAGjB,cAAC,GAAD,CACIC,OAAK,EACLI,gBAAiBQ,EACjBX,KAAK,IACLC,UAAYxB,KAGhB,cAAC,IAAD,CAAUS,GAAI,wB,2BC7D5BvF,GAAc,CAChBrC,MAAM,GACNiD,OAAO,MCJLZ,GAAe,CACjBgF,SAAU,EACVS,SAAU,MCGR0B,GAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,KAErGC,GAAWC,aAAgB,CAC7BlL,KCLuB,WAAyB,IAAxBwE,EAAuB,uDAAhB,GAAK2G,EAAW,uCAC/C,OAAQA,EAAOrJ,MACX,KAAKH,EACD,MAAM,CACFV,IAAIkK,EAAOpJ,QAAQd,IACnBiD,KAAKiH,EAAOpJ,QAAQyF,aAG5B,KAAK7F,EACD,MAAO,GAGX,QACI,OAAO6C,IDPfmE,GDJqB,WAAkC,IAAhCnE,EAA+B,uDAAvBd,GAAayH,EAAU,uCACtD,OAAQA,EAAOrJ,MACX,KAAKH,EACD,kCACO6C,GADP,IAEI2E,SAAUgC,EAAOpJ,UAGzB,KAAKJ,EACD,kCACO6C,GADP,IAEI2E,SAAU,OAElB,KAAKxH,EACD,kCACO6C,GADP,IAEIkE,SAAQ,IAGhB,KAAK/G,EACL,kCACO6C,GADP,IAEIkE,SAAQ,IAEZ,QACI,OAAOlE,ICpBfnD,MFHwB,WAAqC,IAAnCmD,EAAkC,uDAA1Bd,GAAcyH,EAAY,uCAE5D,OAAQA,EAAOrJ,MAEX,KAAKH,EACD,kCACO6C,GADP,IAEIF,OAAO,eACA6G,EAAOpJ,WAItB,KAAKJ,EACD,kCACO6C,GADP,IAEInD,MAAM,CAAC8J,EAAOpJ,SAAT,oBAAoByC,EAAMnD,UAGvC,KAAKM,EACD,kCACO6C,GADP,IAEInD,MAAM,aAAK8J,EAAOpJ,WAG1B,KAAKJ,EACD,kCACO6C,GADP,IAEInD,MAAOmD,EAAMnD,MAAM4G,KACf,SAAApG,GAAI,OAAIA,EAAKJ,KAAO0J,EAAOpJ,QAAQN,GAC7B0J,EAAOpJ,QAAQF,KACfA,OAIlB,KAAKF,EACD,kCACO6C,GADP,IAEIF,OAAO,KACPjD,MAAMmD,EAAMnD,MAAM+J,QAAO,SAAAvJ,GAAI,OACzBA,EAAKJ,KAAO0J,EAAOpJ,aAI/B,KAAKJ,EACD,kCACO6C,GADP,IAEIF,OAAO,KACPjD,MAAM,KAEd,QACI,OAAOmD,ME3CN6G,GAAQC,aACjBL,GACAJ,GACIU,aAAgBC,QEbXC,GAAa,WACtB,OACI,cAAC,IAAD,CAAUJ,MAAQA,GAAlB,SAEI,cAAC,GAAD,O,OCLZK,IAASC,OACP,cAAC,GAAD,IACAlG,SAASmG,eAAe,W","file":"static/js/main.ae3d3224.chunk.js","sourcesContent":["import  firebase  from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBkwvxFJ53mXIWXPYdyMPi5QImPAEnjqT8\",\r\n    authDomain: \"react-journal-app-6fdc8.firebaseapp.com\",\r\n    projectId: \"react-journal-app-6fdc8\",\r\n    storageBucket: \"react-journal-app-6fdc8.appspot.com\",\r\n    messagingSenderId: \"901752510157\",\r\n    appId: \"1:901752510157:web:96e61fa9469d2784a93b84\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const db = firebase.firestore();\r\n  const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  export{\r\n      db,\r\n      googleAuthProvider,\r\n      firebase\r\n  }","export const fileUpload = async(file) =>{\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dsdunk4iv/upload';\r\n    \r\n    const formData = new FormData();\r\n    formData.append('upload_preset','react-journal');\r\n    formData.append('file',file);\r\n    \r\n    try {\r\n        const resp = await fetch(cloudUrl,{\r\n            method:'POST',\r\n            body: formData\r\n        });\r\n\r\n        if(resp.ok){\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        }else{\r\n            throw await resp.json();\r\n        }\r\n\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n\r\n\r\n\r\n}","import { db } from \"../firebase/firebase-config\"\r\n\r\n\r\n\r\nexport const loadNotes  = async (uid) => {\r\n\r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n    const notes = [];\r\n\r\n    notesSnap.forEach(snapHijo =>{\r\n        \r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    });\r\n\r\n    return notes;\r\n}","export const types = {\r\n\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    //UI\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    //types para modificar state \r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Update note',\r\n    notesFileUrl: '[Notes] Update image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout cleaning'\r\n\r\n}","import  Swal from 'sweetalert2';\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { fileUpload } from '../helpers/fileUpload';\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\n// react-journal\r\n\r\nexport const startNewNote = () => {\r\n    return async( dispatch, getState )=>{\r\n\r\n        const {uid} = getState().auth;\r\n        \r\n        const newNote= {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote)\r\n        \r\n        dispatch(activeNote( doc.id, newNote ));\r\n\r\n        dispatch( addNewNote(doc.id,newNote) );\r\n\r\n    }\r\n}\r\n\r\nexport const activeNote = (id, note) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const addNewNote = (id,note) =>({\r\n     type:types.notesAddNew,\r\n     payload:{\r\n         id, ...note\r\n     }\r\n});\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n    return async (dispatch) =>{\r\n        const notes = await loadNotes(uid);\r\n        dispatch( setNotes(notes));\r\n    }\r\n}\r\n\r\nexport const setNotes = (notes)=>({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\n\r\nexport const startSaveNotes = (note) => {\r\n    return async (dispatch,getState) => {\r\n\r\n        const {uid} = getState().auth;\r\n\r\n        if(!note.url){\r\n            delete note.url;\r\n        }\r\n\r\n        const noteToFirestore = {...note};\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore).then(()=>{\r\n            \r\n            dispatch(refreshNote(note.id,noteToFirestore));\r\n\r\n        }).catch(e=>{\r\n            console.log(e);\r\n        });\r\n\r\n        Swal.fire({\r\n            position: 'top-end',\r\n            width: '25rem',\r\n            icon: 'success',\r\n            title: 'Your note was saved',\r\n            showConfirmButton: false,\r\n            timer: 1500\r\n          });\r\n    }\r\n}\r\n\r\nexport const refreshNote = ( id, note ) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id, \r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n})\r\n\r\n\r\nexport const startUploading = (file) =>{\r\n    return async(dispatch,getState) =>{\r\n        const {active : activeNote} = getState().notes;\r\n\r\n        Swal.fire({\r\n            title : 'Uploading...',\r\n            text : 'Please wait...',\r\n            allowOutsideClick: false,\r\n            showConfirmButton: false,\r\n            onBeforeOpen: () =>{\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n\r\n        const fileUrl = await fileUpload(file);\r\n        activeNote.url = fileUrl;\r\n        \r\n        dispatch(startSaveNotes(activeNote))\r\n        Swal.close();\r\n    }\r\n}\r\n\r\nexport const startDeleteNote = (id) => {\r\n    return async (dispatch,getState)=> {\r\n\r\n        const {uid} = getState().auth;\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n        dispatch(deleteNote(id));\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n    type:types.notesDelete,\r\n    payload: id\r\n});\r\n\r\nexport const noteLogout = () => ({\r\n    type:types.notesLogoutCleaning\r\n});","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( newFormState = initialState) => {\r\n        setValues( newFormState);\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startSaveNotes, startUploading } from '../../actions/notes'\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\n\r\nexport const NotesAppBar = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const {active} = useSelector(state => state.notes)\r\n    const actualDate = moment().format('dddd D MMMM');\r\n    \r\n\r\n    const handleSave = () => {\r\n        \r\n        dispatch(startSaveNotes(active));        \r\n    }\r\n\r\n    const handlePictureClick = () => {\r\n        document.querySelector('#fileselector').click();\r\n    }\r\n\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = (e.target.files[0]);\r\n        if(file){\r\n            dispatch(startUploading(file));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar \">\r\n            <span>{actualDate}</span>\r\n\r\n            <input \r\n                id = \"fileselector\"\r\n                type=\"file\"\r\n                style={{display:'none'}}\r\n                onChange= {handleFileChange}\r\n            />\r\n\r\n            <div>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick = {handlePictureClick}\r\n                >\r\n                    Picture \r\n                </button>\r\n\r\n                <button \r\n                className=\"btn\"\r\n                onClick={handleSave}\r\n                >\r\n                    Save \r\n                </button>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activeNote, startDeleteNote } from '../../actions/notes'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { NotesAppBar } from './NotesAppBar'\r\nimport  Swal from 'sweetalert2';\r\nexport const NoteScreen = () => {\r\n\r\n    const {active:note} = useSelector(state => state.notes)\r\n    const [formValues,handleInputChange,reset] = useForm(note);\r\n    const {body,title,id} = formValues;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const activeId = useRef(note.id);\r\n\r\n    useEffect(() => {\r\n        \r\n        if(note.id !== activeId.current){\r\n            reset(note);\r\n            activeId.current = note.id;\r\n        }\r\n    }, [note,reset])\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(activeNote(formValues.id,{...formValues}));\r\n        \r\n    }, [formValues,dispatch])\r\n\r\n\r\n    const handleDelete = () =>{\r\n\r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, delete it!'\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              Swal.fire(\r\n                'Deleted!',\r\n                'Your note has been deleted.',\r\n                'success'\r\n              )\r\n              \r\n              dispatch(startDeleteNote(id));\r\n            }\r\n          });\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"notes__main-content\" > \r\n            \r\n            <NotesAppBar/>\r\n\r\n            <div className =\"notes__content\">\r\n\r\n                <input \r\n                type=\"text\"\r\n                placeholder=\"Add title\"\r\n                className=\"notes__title-input\"\r\n                autoComplete=\"off\"\r\n                name= \"title\"\r\n                value={ title}\r\n                onChange={handleInputChange}\r\n                />\r\n            \r\n                <textarea \r\n                    placeholder=\"What happened today?\"\r\n                    className=\"notes__textarea\"\r\n                    autoComplete=\"off\"\r\n                    name= \"body\"\r\n                    value={body}\r\n                    onChange={handleInputChange}\r\n                ></textarea>\r\n\r\n                {\r\n                    (note.url) &&\r\n                    (<div className = \"notes__image\">\r\n\r\n                        <img \r\n                            src ={note.url}\r\n                            alt=\"img\"\r\n                        />\r\n                    </div>)\r\n                }\r\n\r\n            </div>\r\n\r\n           \r\n            <button\r\n            className=\"btn-danger\"\r\n            onClick ={handleDelete}\r\n            >\r\n                Delete    \r\n            </button> \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className =\"nothing__main-content\">\r\n            <p>\r\n                Select some Journal \r\n                <br/>\r\n                Create an entry!\r\n            </p>\r\n\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nexport const setError = (err) =>({\r\n    type:types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const removeError = () =>({\r\n    type:types.uiRemoveError,\r\n});\r\n\r\nexport const startLoading = ()=>({\r\n    type:types.uiStartLoading\r\n});\r\n\r\nexport const finishLoading = ()=>({\r\n    type:types.uiFinishLoading\r\n});","import Swal from 'sweetalert2'\r\nimport { types } from \"../types/types\"\r\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\r\nimport { finishLoading, startLoading } from \"./ui\";\r\nimport { noteLogout } from './notes';\r\n\r\n\r\nexport const startLoginEmailPassword = (email,password) => {\r\n    return (dispatch) =>{\r\n\r\n        dispatch(startLoading());\r\n\r\n        firebase.auth().signInWithEmailAndPassword(email,password)\r\n        .then(({user})=>{\r\n            dispatch(login(user.uid,user.displayName));\r\n            dispatch(finishLoading());\r\n        }).catch(e=>{\r\n            console.log(e);\r\n            dispatch(finishLoading());\r\n            Swal.fire('Error',e.message,'error');\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const startRegisterWithEmailPasswordName = (email,password,name,) => {\r\n    return (dispatch) =>{\r\n        firebase.auth().createUserWithEmailAndPassword(email,password)\r\n        .then( async ({user})=>{\r\n            //solucion para display name en registro\r\n            await user.updateProfile({displayName:name});\r\n            Swal.fire({\r\n                position: 'center',\r\n                icon: 'success',\r\n                title: 'Your Register was successful',\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n              });\r\n        }).catch(e =>{\r\n            Swal.fire('Error',e.message,'error');\r\n        });\r\n       \r\n    }\r\n}\r\n\r\n\r\nexport const startGoogleLogin = ()=>{\r\n    return (dispatch)=>{\r\n\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n        .then(({user})=>{\r\n\r\n            dispatch(\r\n                login(user.uid,user.displayName)\r\n            )\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const login = (uid, displayName) => ({ \r\n\r\n    type: types.login,\r\n    payload:{\r\n        uid,\r\n        displayName\r\n    }\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return async(dispatch)=>{\r\n        await firebase.auth().signOut();\r\n        dispatch(logout());\r\n        dispatch( noteLogout() );\r\n    }\r\n}\r\n\r\nexport const logout = ()=>({\r\n    type:types.logout\r\n})","import React from 'react';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\nimport 'moment/locale/es';\r\n\r\n\r\nexport const JournalEntry = ({id,date,title,body,url}) => {\r\n\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const noteDate = moment(date);\r\n\r\n    const handleEntryClick = () => {\r\n        dispatch(activeNote(id,{\r\n            date,title,body,url\r\n        }));\r\n    }\r\n\r\n    return (\r\n        <div \r\n        className=\"journal__entry animate__animated animate__fadeIn animate__faster\"\r\n        onClick={handleEntryClick}\r\n        >\r\n            \r\n            {\r\n                url &&\r\n                <div \r\n                className=\"journal__entry-picture\"\r\n                style={{\r\n                    backgroundSize: 'cover',\r\n                    backgroundImage: `url(${url})`\r\n                }}\r\n                >\r\n                </div>\r\n            }\r\n\r\n            <div className =\"journal__entry-body\">\r\n\r\n                <p className =\"journal__entry-title\">\r\n                    { title}\r\n                </p>\r\n\r\n                <p className =\"journal__entry-content\">\r\n                     {body}\r\n                </p>\r\n\r\n            </div>\r\n\r\n            <div className =\"journal__entry-date-box\">\r\n        <span>{noteDate.format('MMMM')}</span>\r\n                <h4>{noteDate.format('e')}</h4>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n\r\n    const {notes} = useSelector(state => state.notes);\r\n    return (\r\n        <div className=\"journal__entries \">\r\n            \r\n            {\r\n                notes.map(note=>(\r\n                    <JournalEntry \r\n                    key={note.id}\r\n                    {...note} \r\n                    />\r\n                ))\r\n            \r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {name} = useSelector(state => state.auth);\r\n\r\n\r\n    const handleLogout = ()=>{\r\n        dispatch(startLogout());\r\n    }\r\n\r\n\r\n    const handleAddNew = () => {\r\n        dispatch(startNewNote());\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n          \r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> {name} </span>\r\n                </h3>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handleLogout}\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div \r\n            className=\"journal__new-entry\"\r\n            onClick = {handleAddNew}\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">\r\n                    New Entry\r\n                </p>\r\n            </div>\r\n            <JournalEntries />\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { Sidebar } from './Sidebar'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const {active} = useSelector(state => state.notes) \r\n\r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\r\n            \r\n            <Sidebar/>\r\n\r\n            <main>\r\n\r\n            {\r\n                (active)\r\n                    ? (<NoteScreen/>)\r\n                    : (<NothingSelected/> )\r\n            }\r\n\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {loading} = useSelector(state => state.ui);\r\n\r\n    const [formValues,handeInputChange] = useForm ({\r\n        // email:'cam@gmail.com',\r\n        // password: 'asdasd'\r\n        email:'',\r\n        password: ''\r\n    })\r\n\r\n    const {email, password} = formValues;\r\n\r\n    const handleLogin = (e) =>{\r\n        e.preventDefault();\r\n        dispatch(startLoginEmailPassword(email,password));\r\n    }\r\n\r\n\r\n    const handleGoogleLogin= () =>{\r\n        dispatch(startGoogleLogin());\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <h3 className=\"auth__title\"> Login </h3>\r\n\r\n            <form \r\n            onSubmit ={handleLogin}\r\n            className = \"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete= \"off\"\r\n                    value = {email}\r\n                    onChange ={ handeInputChange }\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value = {password}\r\n                    onChange ={ handeInputChange }\r\n                />\r\n\r\n                <button \r\n                type=\"submit\"\r\n                className=\"btn-login btn-primary btn-block\"\r\n                disabled={loading}\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                <div className=\"auth__social-network\">\r\n                    <p>Login with social networks</p>\r\n\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                </div>\r\n\r\n                    <Link to =\"/auth/register\"\r\n                        className = \"link mt-5\"\r\n                    >\r\n                        Create new account\r\n                    </Link>\r\n\r\n                </div>                  \r\n                \r\n            </form>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport validator from 'validator';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {msgError} = useSelector(state => state.ui);\r\n\r\n\r\n\r\n    const [formValues,handeInputChange] = useForm ({\r\n        // name:'camelio',\r\n        // email: 'cam@gmail.com',\r\n        // password: 'asdasd',\r\n        // password2: 'asdasd'\r\n        name:'',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    })\r\n\r\n    const {name,email,password,password2} = formValues;\r\n\r\n    const handleRegister = (e)=>{\r\n        e.preventDefault();\r\n\r\n        if( isFormValid() ){\r\n            dispatch(startRegisterWithEmailPasswordName(email,password,name));\r\n        }\r\n    }\r\n\r\n    const isFormValid = ()=>{\r\n    \r\n        if(name.trim().length === 0){\r\n            dispatch(setError('Name is required'));\r\n            return false;\r\n        }else if (!validator.isEmail( email )){\r\n            dispatch(setError('Email is not valid'));\r\n            return false;\r\n        }else if (password !== password2){\r\n            dispatch(setError('Password must be equals'));\r\n            return false;\r\n        }\r\n        if (password.length <= 5){\r\n            dispatch(setError('Password must have at least 5 characters'));\r\n            return false;\r\n        }\r\n\r\n        dispatch(removeError());\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <h3 className=\"auth__title-register\"> Register </h3>\r\n\r\n            <form \r\n            onSubmit={handleRegister}\r\n            className = \"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n\r\n\r\n            {\r\n                msgError && \r\n                (<div className = \"animate__animated animate__pulse\">\r\n                    {msgError}\r\n                </div>)\r\n            \r\n            }\r\n\r\n\r\n            <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete= \"off\"\r\n                    value={name}\r\n                    onChange={handeInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete= \"off\"\r\n                    value={email}\r\n                    onChange={handeInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handeInputChange}\r\n                />\r\n\r\n                <input  \r\n                    type=\"password\"\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={password2}\r\n                    onChange={handeInputChange}\r\n                />\r\n\r\n                <button \r\n                type=\"submit\"\r\n                className=\"btn-login btn-primary btn-block mb-5\"\r\n                \r\n                >\r\n                    Register\r\n                </button>\r\n      \r\n                <Link to =\"/auth/login\"\r\n                    className = \"link mt-5\"\r\n                >\r\n                    Aready Registered?\r\n                </Link>\r\n                \r\n            </form>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Switch,Route,Redirect } from 'react-router-dom';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n\r\n        <div className=\"auth__main\">\r\n            \r\n            <div className =\"auth__box-container\">\r\n\r\n                <Switch>\r\n\r\n                    <Route\r\n                        exact\r\n                        path=\"/auth/login\"\r\n                        component={LoginScreen}\r\n                    >\r\n                            \r\n                    </Route>\r\n\r\n                    <Route\r\n                        exact\r\n                        path=\"/auth/register\"\r\n                        component={RegisterScreen}\r\n                    >\r\n                    </Route>\r\n\r\n                    <Redirect to =\"/auth/register\"/>\r\n\r\n                </Switch>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/auth/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect, useState } from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { firebase } from '../firebase/firebase-config';\r\nimport { login } from '../actions/auth';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\n\r\nexport const AppRouter = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const [checking, setChecking] = useState(true);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged(async (user)=>{\r\n                \r\n            if(user?.uid){\r\n                dispatch(login(user.uid,user.displayName)); \r\n                setIsLoggedIn(true);\r\n                dispatch(startLoadingNotes(user.uid));\r\n\r\n            }else{\r\n                setIsLoggedIn(false);\r\n            }\r\n\r\n            setChecking(false);\r\n\r\n        }); \r\n    }, [dispatch,setChecking,setIsLoggedIn])\r\n\r\n    if(checking){\r\n        return(\r\n            <div className=\"loader__preloader\"></div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        isAuthenticated={isLoggedIn}\r\n                        path=\"/auth\"\r\n                        component = {AuthRouter}\r\n                    />\r\n\r\n                    <PrivateRoute\r\n                        exact\r\n                        isAuthenticated={isLoggedIn}\r\n                        path=\"/\"\r\n                        component= {JournalScreen}\r\n                    />\r\n                    \r\n                    <Redirect to =\"/auth/login\"/>\r\n                    \r\n                </Switch>   \r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\n\r\nconst initialState ={\r\n    notes:[],\r\n    active:null\r\n}\r\n\r\nexport const notesReducer = ( state = initialState, action ) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.notesActive:\r\n            return{\r\n                ...state,\r\n                active:{\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesAddNew:\r\n            return{\r\n                ...state,\r\n                notes:[action.payload,...state.notes]\r\n            }\r\n\r\n        case types.notesLoad:\r\n            return{\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n\r\n        case types.notesUpdated:\r\n            return{\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n\r\n        case types.notesDelete:\r\n            return{\r\n                ...state,\r\n                active:null,\r\n                notes:state.notes.filter(note =>\r\n                    note.id !== action.payload\r\n                )\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n            return{\r\n                ...state,\r\n                active:null,\r\n                notes:[]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading : false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = ( state = initialState,action) =>{\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return{\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n        \r\n        case types.uiRemoveError:\r\n            return{\r\n                ...state,\r\n                msgError: null\r\n            }\r\n        case types.uiStartLoading:\r\n            return{\r\n                ...state,\r\n                loading:true\r\n            }\r\n\r\n        case types.uiFinishLoading:\r\n        return{\r\n            ...state,\r\n            loading:false\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore,combineReducers, applyMiddleware,compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui:uiReducer,\r\n    notes:notesReducer\r\n});\r\n\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n    );","import { types } from '../types/types';\r\n\r\n\r\n \r\n// maneja estados de autenticacion\r\nexport const authReducer = (state ={} , action) => {\r\n    switch (action.type) {\r\n        case types.login:\r\n            return{\r\n                uid:action.payload.uid,\r\n                name:action.payload.displayName\r\n            }\r\n\r\n        case types.logout:\r\n            return { }\r\n            \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { store } from './store/store';\r\n\r\n\r\nexport const JournalAPP = () => {\r\n    return (\r\n        <Provider store= {store} >\r\n            \r\n            <AppRouter/>\r\n\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalAPP } from './JournalApp';\nimport './styles/styles.scss';\n\nReactDOM.render(\n  <JournalAPP />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}